{
    "contents" : "# A shiny app gets called this way: shiny::runApp()\n# Libraries\nlibrary(shiny)\n\nui <- navbarPage(\"Flood frequency analysis\",  # cut off:  id = \"nav\",\n                 \n                 tabPanel(\"About\", icon = icon(\"info\"),\n                          fluidRow(\n                            \n                            HTML('\n                                 <p style=\"text-align:justify\"> This app lets you explore various frequency analysis options for fitting flood data in Norway </p>\n                                 \n                                 <p style=\"text-align:justify\"> <b> Research questions </b> </p>\n                                 \n                                 <p style=\"text-align:justify\"> Which distribution gives the best fit to the data? </p>\n                                 <p style=\"text-align:justify\"> Which estimation method provides the best fit to the data? </p>\n                                 <p style=\"text-align:justify\"> Does the answer depend on local data availability? </p>\n                        \n                          <p style=\"text-align:justify\"> <big> <b> Probability distributions </b> </big> </p>\n                          <div> <dl>\n                        <p style=\"text-align:justify\"> Gamma </p>\n                        <p style=\"text-align:justify\"> Gumbel </p>\n                        <p style=\"text-align:justify\"> GEV: Generalized extreme value </p>\n                        <p style=\"text-align:justify\"> GL: Generalized logistics </p>\n                        <p style=\"text-align:justify\"> Pearson III </p>\n</div> </dl>                          \n\n<p style=\"text-align:justify\"> <b> Estimations methods </b> </p>\n                          <p style=\"text-align:justify\"> MLE : maximum likelihood estimation </p>\n                          <p style=\"text-align:justify\"> Lmom: Linear moments </p>\n                          <p style=\"text-align:justify\"> MOM: Ordinary moments </p>\n                        <p style=\"text-align:justify\"> Bayesian estimation </p>'\n                                 \n                                 \n                            )),\n                          fluidRow(\n                            column(3, wellPanel(\n                              selectInput(inputId='min_years', selected = '60', label='Select a minimum number of years', \n                                          choices = c(30,60,90,120))\n                            )\n                            ),\n                            column(3, wellPanel(\n                              selectInput(inputId='max_years', selected = '80', label='Select a maximum number of years', \n                                          choices = c(60,90,120,150))\n                            )\n                            ),\n                            column(3, wellPanel(\n                              selectInput(inputId='min_height', selected = '0', label='Select the catchment minimum elevation', \n                                          choices = seq(0,2500,500))\n                            )\n                            ),\n                            column(3, wellPanel(\n                              selectInput(inputId='max_years', selected = '1000', label='Select the catchment minimum elevation', \n                                          choices = seq(0,2500,500))\n                            )\n                            )\n                          )\n                 ),\n                 \n                 \n                 \n                 \n                 \n                 \n                 \n                 # tagList(\n                 navbarMenu(\"Single station analysis\", icon = icon(\"compress\"),\n                            tabPanel(\"Main plots\",\n                                     \n                                     fluidRow(\n                                       \n                                       column(2, wellPanel(actionButton(\"help_loc_btn\", \"About this tab\", class=\"btn-block\"), br())),\n                                       bsModal(\"modal_loc\", \"About\", \"help_loc_btn\", size=\"large\",\n                                               HTML('\n                                                              <p style=\"text-align:justify\"> This app lets you explore various frequency analysis options for fitting flood data in Norway </p>\n                                                              \n                                                              <p style=\"text-align:justify\"> Our research questions are </p>\n                                                              \n                                                              <p style=\"text-align:justify\"> Which distribution gives the best fit to the data? </p>\n                                                              <p style=\"text-align:justify\"> Which estimation method provides the best fit to the data? </p>\n                                                              <p style=\"text-align:justify\"> Does the answer depend on local data availability? </p>'\n                                                    \n                                                    \n                                               )),                                  \n                                       \n                                       column(2, wellPanel(\n                                         selectInput(inputId='distr', selected = 'gamma', label='Select a probability distribution', \n                                                     choices = distr.name)\n                                       )\n                                       ),\n                                       column(2, wellPanel(\n                                         selectInput(inputId='method', label = \"Select an estimation method\", choices = method.name)\n                                       )\n                                       ),\n                                       column(2, wellPanel(\n                                         selectInput(inputId='station', selected =  station$number[37], \n                                                     label = \"Pick a station\", choices = station$number)\n                                       )\n                                       ),\n                                       \n                                       column(2, wellPanel(\n                                         selectInput(inputId='length', label = \"Choose a record length\", selected = 30,\n                                                     choices = c('FULL RECORD', sampling_years))  # Sampling years should be recalculated by the app\n                                         \n                                       )\n                                       ),\n                                       column(2, wellPanel(\n                                         uiOutput(\"random.panel\") \n                                       )\n                                       ),\n                                       bsTooltip(\"distr\", \"Gamma and gumbel are 2-parameter distributions, the others use 3\", \"bottom\", options = list(container=\"body\")),\n                                       bsTooltip(\"station\", \"A station can also be selected by clicking on its marker in the map below\", \"bottom\", options = list(container=\"body\"))\n                                     ),\n                                     \n                                     \n                                     fluidRow(\n                                       column(3, plotOutput('main.plot')),\n                                       column(3, plotOutput('rlevels.plot')),  # plot4server_rlevel \n                                       column(3, plotOutput('cdf.plot')),\n                                       column(3, plotOutput('qq.plot')) # plot4server_rlevel\n                                     ),  \n                                     \n                                     fluidRow( \n                                       \n                                       column(5, \n                                              h4(\"Goodness of fit summary\"),\n                                              formattableOutput(\"gof.table\"),\n                                              # uiOutput(\"gof.table\"),  # Switch to this if plotting the interactive table (highlight)\n                                              \n                                              h4(\"Summary for return levels, QS or BS\"),\n                                              formattableOutput(\"gof.table2\")\n                                              \n                                              \n                                       ),\n                                       column(3, wellPanel(\n                                         # actionButton(\"color4plot\", \"Plot\"),\n                                         \n                                         selectInput(inputId='gof2table', selected = 'KS', label='Select a goodness of fit measure to summarize', \n                                                     choices = c('CS', 'KS', 'AD')),\n                                         \n                                         selectInput(inputId='gof2table2', selected = 'r.levels', label='Select a goodness of fit measure to summarize', \n                                                     choices = c('r.levels', 'QS', 'BS')),\n                                         \n                                         selectInput(inputId='r.period4table', selected = 100, label='Choose a return period for the table', \n                                                     choices = return.periods)\n                                         \n                                       )\n                                       \n                                       ),\n                                       column(4, leafletOutput('map'))\n                                     )  # closing last fluidrow   \n                            ),  # closing the first tab\n                            \n                            tabPanel(\"Return levels\",\n                                     fluidRow(\n                                       column(3, wellPanel(\n                                         selectInput(inputId='r.period', selected = 100, label='Which return period to plot?', \n                                                     choices = return.periods)\n                                       )\n                                       ),\n                                       plotOutput('plot.rlevels', width = \"100%\", height = \"800px\")\n                                     )\n                            ), # closing tab\n                            \n                            tabPanel(\"Quantile score\",\n                                     fluidRow(\n                                       column(3, wellPanel(\n                                         selectInput(inputId='r.period4qs', selected = 100, label='Which return period to plot?', \n                                                     choices = return.periods)\n                                       )\n                                       ),\n                                       plotOutput('plot.qs', width = \"100%\", height = \"800px\")\n                                     )\n                            ), # closing tab\n                            \n                            tabPanel(\"Brier score\",\n                                     fluidRow(\n                                       column(3, wellPanel(\n                                         selectInput(inputId='r.period4bs', selected = 10, label='Which return period to plot?', \n                                                     choices = rperiods.bs)\n                                       )\n                                       ),\n                                       plotOutput('plot.bs', width = \"100%\", height = \"800px\")\n                                     )\n                            ), # closing tab\n                            tabPanel(\"NT\",\n                                     fluidRow(\n                                       column(3, wellPanel(\n                                         selectInput(inputId='r.period4nt', selected = 10, label='Which return period to plot?', \n                                                     choices = rperiods.bs)\n                                       )\n                                       ),\n                                       plotOutput('plot.nt', width = \"100%\", height = \"800px\")\n                                     )\n                            ), # closing tab\n                            \n                            tabPanel(\"Coefficients of variation\",\n                                     fluidRow(\n                                       column(3, wellPanel(\n                                         selectInput(inputId='r.period4coefvar', selected = 100, label='Which return period to plot?', \n                                                     choices = return.periods)\n                                       )\n                                       ),\n                                       column(3, wellPanel(\n                                         selectInput(inputId='coeffvar2plot', selected = 'r.levels', label='Select a goodness of fit measure to summarize', \n                                                     choices = c('r.levels', 'QS', 'BS'))\n                                       )),\n                                       \n                                       plotOutput('plot.rlevels_coeff', width = \"100%\", height = \"800px\")\n                                     )\n                            ), # closing tab\n                            tabPanel(\"Kolmogorov Smirnoff\",\n                                     fluidRow(\n                                       plotOutput('plot.ks', width = \"100%\", height = \"900px\")\n                                     )\n                            ), # closing tab\n                            \n                            tabPanel(\"Anderson Darling\",\n                                     fluidRow(\n                                       plotOutput('plot.ad', width = \"100%\", height = \"900px\")\n                                     )\n                            ), # closing tab\n                            \n                            tabPanel(\"Chi Square\",\n                                     fluidRow(\n                                       plotOutput('plot.cs', width = \"100%\", height = \"900px\")\n                                     )\n                            ) # closing tab\n                 ),  # Closing navbarMenu\n                 \n                 navbarMenu(\"Station averaged analysis\", icon = icon(\"expand\"),\n                            \n                            tabPanel(\"Station-averaged CV\",\n                                     fluidRow(\n                                       column(3, wellPanel(\n                                         selectInput(inputId='r.period4coefvar_ave', selected = 100, label='Which return period to plot?', \n                                                     choices = return.periods)\n                                       )\n                                       ),\n                                       column(3, wellPanel(\n                                         selectInput(inputId='coeffvar2plot_ave', selected = 'r.levels', label='Select a goodness of fit measure to summarize', \n                                                     choices = c('r.levels', 'QS', 'BS', 'NT'))\n                                       )),\n                                       \n                                       \n                                       column(3, wellPanel(\n                                         selectInput(inputId='min_years4coeff_ave', selected = '60', label='Select a minimum number of years', \n                                                     choices = c(30,60,90,120))\n                                       )\n                                       ),\n                                       column(3, wellPanel(\n                                         selectInput(inputId='max_years4coeff_ave', selected = '80', label='Select a maximum number of years', \n                                                     choices = c(60,90,120,150))\n                                       )\n                                       )\n                                       \n                                     ),\n                                     fluidRow(        \n                                       plotOutput('plot.rlevels_coeff_averaged', width = \"100%\", height = \"800px\")\n                                     )\n                            ), # closing tab  \n                            \n                            tabPanel(\"Station-averaged GOF\",\n                                     fluidRow( \n                                       column(3, wellPanel(\n                                         selectInput(inputId='gof4ave', selected = 'KS', label='Select a goodness of fit measure', \n                                                     choices = c('CS', 'KS', 'AD'))\n                                       )\n                                       ),\n                                       column(4, wellPanel(\n                                         selectInput(inputId='min_years4ave', selected = '60', label='Select a minimum number of years', \n                                                     choices = c(30,60,90,120))\n                                       )\n                                       ),\n                                       column(4, wellPanel(\n                                         selectInput(inputId='max_years4ave', selected = '90', label='Select a maximum number of years', \n                                                     choices = c(60,90,120,150))\n                                       )\n                                       )\n                                       \n                                     ),\n                                     fluidRow(        \n                                       plotOutput('plot.gof_averaged', width = \"100%\", height = \"900px\")\n                                     )\n                                     \n                            ) # closing tab\n                 ),  # Closing navbarMenu\n                 \n                 navbarMenu(\"Mapping tools\",\n                            \n                            tabPanel(\"Mapping GOF-based groups of stations\",  \n                                     \n                                     fluidRow( \n                                       column(3, wellPanel(\n                                         selectInput(inputId='gof4st_groups', selected = 'KS', label='Select a goodness of fit measure', \n                                                     choices = c('CS', 'KS', 'AD'))\n                                       )\n                                       ),\n                                       column(3, wellPanel(\n                                         selectInput(inputId='minmax', label = \"Want to get min GOF (best perf) or max GOF\", choices = c(\"min\", \"max\")) )\n                                       ),\n                                       \n                                       column(3, wellPanel(\n                                         selectInput(inputId='distr4st_groups', selected = 'gamma', label='Select a probability distribution', \n                                                     choices = c(distr.name, \"ALL\"))\n                                       )\n                                       ),\n                                       column(3, wellPanel(\n                                         selectInput(inputId='method4st_groups', label = \"Select an estimation method\", choices = c(method.name, \"ALL\")) )\n                                         \n                                       )\n                                     ),\n                                     fluidRow(         \n                                       column(9, DT::dataTableOutput('group.table')\n                                       ),\n                                       column(3,\n                                              h4(\"Maps of stations with common best method and distribution\"),\n                                              leafletOutput('map.groups_from_gof', height = \"800px\")\n                                       )\n                                       \n                                       \n                                     )\n                            ), icon = icon(\"globe\") # closing tab\n                 ),  # Closing navbarMenu\n                 \n                 navbarMenu(\"Table tools\",\n                            \n                            tabPanel(\"Table summary\",  \n                                     fluidRow(     \n                                       h4(\"Table\"),\n                                       DT::dataTableOutput('test.table')\n                                     )\n                                     #            leafletOutput('map4table') # DOESNT WORK WITH THIS VERSION OF DT\n                            ), icon = icon(\"table\") # closing tab\n                 ),  # Closing navbarMenu \n                 windowTitle = \"Explore Big Mama!\"                      \n)  # Closing navbarPage\n\n# Closing UI\n\n\n\n\n\n\n\n\n\n\n\n\n# to check out from Radiant https://github.com/vnijs/radiant/blob/master/inst/analytics/ui.R\n# radiant@rady.ucsd.edu\n",
    "created" : 1463041331356.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2520625805",
    "id" : "CC90A356",
    "lastKnownWriteTime" : 1462878772,
    "path" : "~/GitHub/FlomKart_ShinyApp/R/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}